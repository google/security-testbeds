# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
FROM drupal:8.6.9-apache as chroot

RUN echo "deb http://archive.debian.org/debian stretch main" > /etc/apt/sources.list
RUN apt-get update


# Install packages
RUN apt-get update && apt-get install -y zip unzip curl git sqlite3 vim

# Install composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
RUN composer self-update 1.8.4

# Install drush
RUN composer global require drush/drush:9.5.2
RUN composer require drush/drush:9.5.2
ENV PATH $PATH:/root/.composer/vendor/bin


# Install site
RUN  drush site-install --db-url="sqlite://sites/default/files/.ht.sqlite" --site-name="Drupal CVE-2019-6340" --account-pass=password

# Install REST UI module
RUN composer require drupal/restui:1.16

# Configure REST
RUN cp core/modules/rest/config/optional/rest.resource.entity.node.yml core/modules/rest/config/install/
RUN sed -i 's/basic_auth/cookie/g' ./core/modules/rest/config/install/rest.resource.entity.node.yml
RUN sed -i -e '5d' ./core/modules/rest/config/install/rest.resource.entity.node.yml

# Enable modules
RUN drush en rest hal

VOLUME /tmp

# Install socat
USER root
RUN echo 'deb http://archive.debian.org/debian/ stretch main' > /etc/apt/sources.list
RUN apt-get update; exit 0
RUN apt-get install socat -y --force-yes; exit 0

# Configure 8080 port
RUN sed -i '5s/80/8080/' /etc/apache2/ports.conf
RUN sed -i '1s/80/8080/' /etc/apache2/sites-enabled/000-default.conf

#DEBUG LOG
#RUN sed -i '143s/warn/debug/' /etc/apache2/apache2.conf
#RUN sed -i '134c\ErrorLog /var/www/html/error.log' /etc/apache2/apache2.conf

# Fix permission
ADD sites /copy/sites
RUN chmod -R a+wrx /root
RUN chmod -R a+wrx /copy/sites


ADD auth-flag.php /var/www/html/auth-flag.php
RUN chmod +777 auth-flag.php /var/www/html/auth-flag.php

RUN mkdir -p /logs
RUN chmod a+wrx /logs

RUN rm -r /var/www/html/sites
RUN mkdir -p /flag

FROM europe-west4-docker.pkg.dev/internet-ctf/custom-images/kctf-source

COPY --from=chroot / /chroot

VOLUME /chroot/var/www/html
VOLUME /chroot/logs
VOLUME /chroot/flag

COPY startup.sh /chroot
RUN chmod +777 /chroot/startup.sh

COPY nsjail.cfg /home/user/nsjail.cfg

RUN apt-get update \
    && apt-get install -yq --no-install-recommends cron
RUN apt-get install -y --reinstall rsyslog

ADD cleanup.sh /cleanup.sh
RUN chmod +777 /cleanup.sh
COPY cron /etc/cron.d/cron
RUN chmod 0644 /etc/cron.d/cron
RUN crontab /etc/cron.d/cron

VOLUME /var/log
VOLUME /run
VOLUME /tmp

CMD service rsyslog start; \
	cron;  \
	sed -i "s@abc@$(cat /flag/flag-auth.txt)@g" /chroot/var/www/html/auth-flag.php; \
	kctf_setup \
	&& (kctf_drop_privs nsjail -E PASSWORD=$(cat /flag/password.txt) -E ROOTFLAG=$(cat /flag/flag.txt) --config /home/user/nsjail.cfg --port 1337 -- /startup.sh &) \
	&& tail -F /var/log/syslog 
