FROM php:7.2.34-buster

EXPOSE 80

ENV COMPOSER_BIN /usr/local/bin/composer/composer.phar
ENV APP_ROOT /var/www/html/laravel
ENV ROUTES_DIR $APP_ROOT/routes

RUN apt-get update
RUN apt-get install -y autoconf pkg-config libssl-dev wget \
  curl \
  git \
  grep \
  nginx \
  libmemcached-dev \
  libxml2-dev \
  autoconf \
  vim

RUN docker-php-ext-install mysqli mbstring pdo pdo_mysql tokenizer xml

# Install Laravel dependencies
RUN apt-get install -y \
        libfreetype6-dev \
        libjpeg62-turbo-dev \
        zlib1g-dev \
        unzip \
        git

RUN docker-php-ext-install iconv mbstring \
    && docker-php-ext-install zip \
    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
    && docker-php-ext-install gd

# Install composer, a package manager for PHP. Note that Composer 1 is needed to
# avoid installation error (https://github.com/composer/composer/issues/9340).
RUN curl -sS https://getcomposer.org/installer | php \
    && mkdir -p /usr/local/bin/composer \
    && mv composer.phar $COMPOSER_BIN \
    && $COMPOSER_BIN self-update --1

# Clone the latest laravel/laravel repo but install the vulnerable
# laravel/framework version
RUN git clone --branch 'v5.6.33' https://github.com/laravel/laravel.git $APP_ROOT \
    && cd $APP_ROOT \
    && sed -i -e 's;.*laravel/framework.*";"laravel/framework": "5.6.29";g' composer.json \
    && $COMPOSER_BIN install

# Add a POST route so we can trigger the vulnerability:
RUN mkdir -p $ROUTES_DIR
RUN echo "Route::post('/', function() {return view('welcome');});" >> $ROUTES_DIR/web.php

# Fix up local .env file
RUN cp $APP_ROOT/.env.example $APP_ROOT/.env \
    && sed -i -e "s;^APP_KEY=.*$;APP_KEY=base64:9UZUmEfHhV7WXXYewtNRtCxAYdQt44IAgJUKXk2ehRk=;" $APP_ROOT/.env \
    && echo "WARNING: USING HARD CODED APP_KEY" && grep "^APP_KEY" $APP_ROOT/.env

COPY ./start.sh /tmp    

CMD kctf_setup && /tmp/start.sh
